generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URI")
}

model User {
  id                  String   @id @default(auto()) @map("_id") @db.ObjectId
  name                String
  email               String   @unique
  phoneNumber         String
  gender              String
  dateOfBirth         String
  country             String
  city                String
  connectionStyles    String
  communicationStyles String
  socialStyles        String
  healthAndFitness    String
  family              String
  spirituality        String
  politicalNews       String
  incorrectHumor      String
  kindOfPeople        String[]
  password            String
  isLoggedIn          Boolean  @default(false)
  createdAt           DateTime @default(now())
  cafeId              String?  @db.ObjectId

  cafe Cafe? @relation(fields: [cafeId], references: [id])

  // Explicit relation to events via participants
  eventParticipants EventParticipant[]
}

model Location {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  city      String
  country   String
  imageUrl  String
  cafes     Cafe[]
  createdAt DateTime @default(now())
}

model Cafe {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  locationId String   @db.ObjectId
  address    String
  createdAt  DateTime @default(now())
  imageUrl   String

  location Location @relation(fields: [locationId], references: [id])
  users    User[]
  events   Event[]
}

model Event {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  date       DateTime
  city       String
  country    String
  cafeId     String?  @db.ObjectId
  cafe       Cafe?    @relation(fields: [cafeId], references: [id])
  createdAt  DateTime @default(now())
  isClosed   Boolean  @default(false)

  // The admin who created the event
  createdBy  String   @db.ObjectId
  admin      Admin    @relation(fields: [createdBy], references: [id])

  // Users who joined this event
  participants EventParticipant[]
}

model EventParticipant {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  eventId   String   @db.ObjectId
  joinedAt  DateTime @default(now())

  user  User  @relation(fields: [userId], references: [id])
  event Event @relation(fields: [eventId], references: [id])
}

model Admin {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  email      String  @unique
  password   String
  isLoggedIn Boolean @default(false)

  // List of events created by this admin
  events Event[]
}
